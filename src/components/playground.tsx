/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Q4Gcm1WzYl7
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import Link from "next/link"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from "@/components/ui/dialog"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { ResponsiveLine } from "@nivo/line"
import Advanced from "@/components/3d/Advanced"
export function Playground() {
  const [showModal, setShowModal] = useState(false)
  const [newProject, setNewProject] = useState({
    title: "",
    description: "",
    jsType: "modules",
  })
  const [selectedProject, setSelectedProject] = useState(null)
  const handleSubmit = (e) => {
    e.preventDefault()
    setShowModal(false)
  }
  const handleProjectClick = (project) => {
    setSelectedProject(project)
  }
  return (
    <div className="flex min-h-screen w-full">
     
      <aside className="bg-background border-r flex flex-col gap-4 p-4 w-64 shrink-0">
        <div className="flex items-center justify-between">
          <h2 className="text-lg font-semibold">Projects</h2>
          <Button size="sm" onClick={() => setShowModal(true)}>
            <PlusIcon className="w-4 h-4 mr-2" />
            Add New
          </Button>
        </div>
        <div className="flex-1 overflow-auto">
          <div className="grid gap-4">
            <Link
              href="#"
              className="grid grid-cols-[60px_1fr] items-center gap-4 rounded-md bg-muted p-2 hover:bg-muted/50"
              onClick={() =>
                handleProjectClick({
                  title: "Acme Website",
                  description: "Landing page design",
                })
              }
              prefetch={false}
            >
              <img
                src="/placeholder.svg"
                alt="Project Thumbnail"
                width={60}
                height={60}
                className="rounded-md"
                style={{ aspectRatio: "60/60", objectFit: "cover" }}
              />
              <div className="grid gap-1">
                <div className="font-medium">Acme Website</div>
                <div className="text-sm text-muted-foreground">Landing page design</div>
              </div>
            </Link>
            <Link
              href="#"
              className="grid grid-cols-[60px_1fr] items-center gap-4 rounded-md bg-muted p-2 hover:bg-muted/50"
              onClick={() =>
                handleProjectClick({
                  title: "Dashboard UI",
                  description: "Admin panel design",
                })
              }
              prefetch={false}
            >
              <img
                src="/placeholder.svg"
                alt="Project Thumbnail"
                width={60}
                height={60}
                className="rounded-md"
                style={{ aspectRatio: "60/60", objectFit: "cover" }}
              />
              <div className="grid gap-1">
                <div className="font-medium">Dashboard UI</div>
                <div className="text-sm text-muted-foreground">Admin panel design</div>
              </div>
            </Link>
            <Link
              href="#"
              className="grid grid-cols-[60px_1fr] items-center gap-4 rounded-md bg-muted p-2 hover:bg-muted/50"
              onClick={() =>
                handleProjectClick({
                  title: "Mobile App",
                  description: "iOS and Android design",
                })
              }
              prefetch={false}
            >
              <img
                src="/placeholder.svg"
                alt="Project Thumbnail"
                width={60}
                height={60}
                className="rounded-md"
                style={{ aspectRatio: "60/60", objectFit: "cover" }}
              />
              <div className="grid gap-1">
                <div className="font-medium">Mobile App</div>
                <div className="text-sm text-muted-foreground">iOS and Android design</div>
              </div>
            </Link>
            <Link
              href="#"
              className="grid grid-cols-[60px_1fr] items-center gap-4 rounded-md bg-muted p-2 hover:bg-muted/50"
              onClick={() =>
                handleProjectClick({
                  title: "E-commerce Site",
                  description: "Online store design",
                })
              }
              prefetch={false}
            >
              <img
                src="/placeholder.svg"
                alt="Project Thumbnail"
                width={60}
                height={60}
                className="rounded-md"
                style={{ aspectRatio: "60/60", objectFit: "cover" }}
              />
              <div className="grid gap-1">
                <div className="font-medium">E-commerce Site</div>
                <div className="text-sm text-muted-foreground">Online store design</div>
              </div>
            </Link>
          </div>
        </div>
      </aside>
       <main className="flex-1 bg-background">
        <div className="h-full w-full flex">
          {selectedProject ? (
            <div className="flex flex-col gap-8 p-8 w-full">
              <div>
                <h2 className="text-2xl font-bold mb-4">{selectedProject.title}</h2>
                <p className="text-muted-foreground">{selectedProject.description}</p>
              </div>
              <div className="flex flex-1 flex-col gap-4">
                <div className="bg-muted rounded-md p-4 flex-1">
                  <h3 className="text-lg font-bold mb-2">HTML</h3>
                  <p>This is where the HTML code for the project would be displayed.</p>
                </div>
                <div className="bg-muted rounded-md p-4 flex-1">
                  <h3 className="text-lg font-bold mb-2">CSS</h3>
                  <p>This is where the CSS code for the project would be displayed.</p>
                </div>
                <div className="bg-muted rounded-md p-4 flex-1">
                  <h3 className="text-lg font-bold mb-2">JS</h3>
                  <p>This is where the JavaScript code for the project would be displayed.</p>
                </div>
              </div>
            </div>
          ) : (
            <div className="h-full w-full flex items-center justify-center">
              <p className="text-lg text-muted-foreground">Select a project to get started.</p>

              <Advanced />
            </div>
          )}
        </div>
      </main>
      <Dialog open={showModal} onOpenChange={setShowModal}>
        <DialogContent className="sm:max-w-[425px]">
          <DialogHeader>
            <DialogTitle>Add New Project</DialogTitle>
            <DialogDescription>Fill out the details for your new project.</DialogDescription>
          </DialogHeader>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="grid gap-2">
              <Label htmlFor="title">Title</Label>
              <Input
                id="title"
                value={newProject.title}
                onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}
              />
            </div>
            <div className="grid gap-2">
              <Label htmlFor="description">Description</Label>
              <Textarea
                id="description"
                value={newProject.description}
                onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}
              />
            </div>
            <div className="grid gap-2">
              <Label htmlFor="jsType">JavaScript Type</Label>
              <Input
                id="jsType"
                value={newProject.jsType}
                onChange={(e) => setNewProject({ ...newProject, jsType: e.target.value })}
              />
            </div>
            <DialogFooter>
              <Button type="submit">Create Project</Button>
              <div>
                <Button variant="outline">Cancel</Button>
              </div>
            </DialogFooter>
          </form>
        </DialogContent>
      </Dialog>
    </div>
  )
}

 

 


function PlusIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}
